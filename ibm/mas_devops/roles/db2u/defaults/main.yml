---
# Configure Db2 instance
# -----------------------------------------------------------------------------------------------------------------
db2u_namespace: db2u

db2u_instance_name: "{{ lookup('env', 'DB2U_INSTANCE_NAME') }}" # e.g. db2u-iot or db2u-manage
db2u_dbname: "{{ lookup('env', 'DB2U_DBNAME') | default('BLUDB', true) }}"
db2u_version: "{{ lookup('env', 'DB2U_VERSION') | default('11.5.7.0-cn2', true)}}"
db2u_jdbc_username: db2inst1

db2u_table_org: "{{ lookup('env', 'DB2U_TABLE_ORG') | default('ROW', true) }}" # e.g ROW or COLUMN

# If storage class is OCS or PortWorx then 4k device support should be ON
db2u_4k_device_support: "{{ lookup('env', 'DB2U_4K_DEVICE_SUPPORT') | default('ON', true) }}"

db2u_node_label: "{{ lookup('env', 'DB2U_NODE_LABEL') | default(None, true) }}" # by default there is no node affinity/tolerations
db2u_dedicated_node: "{{ lookup('env', 'DB2U_DEDICATED_NODE') | default(None, true) }}" # by default there is no dedicated node
db2u_workload: "{{ lookup('env', 'DB2U_WORKLOAD') | default('ANALYTICS', true) }}" # default workload is ANALYTICS, other option is PUREDATA_OLAP

# Support DB2 MPP configurations
db2u_mln_count: "{{ lookup('env', 'DB2U_MLN_COUNT') | default(1, true) }}" # by default only specify one logical node (i.e. one db partition)
db2u_num_pods: "{{ lookup('env', 'DB2U_NUM_PODS') | default(1, true) }}" # by default only specify one db2 pod

# Configure meta storage for db2u
db2u_meta_storage_class: "{{ lookup('env', 'DB2U_META_STORAGE_CLASS') }}"
db2u_meta_storage_size_gb: "{{ lookup('env', 'DB2U_META_STORAGE_SIZE_GB') | default(20, true) }}"

# Configure data storage for db2u
db2u_data_storage_class: "{{ lookup('env', 'DB2U_DATA_STORAGE_CLASS') }}"
db2u_data_storage_size_gb: "{{ lookup('env', 'DB2U_DATA_STORAGE_SIZE_GB') | default(100, true) }}"

# Configure backup storage for db2u
db2u_backup_storage_class: "{{ lookup('env', 'DB2U_BACKUP_STORAGE_CLASS') }}"
db2u_backup_storage_size_gb: "{{ lookup('env', 'DB2U_BACKUP_STORAGE_SIZE_GB') | default(100, true) }}"

# Configure transaction logs storage for db2u
db2u_logs_storage_class: "{{ lookup('env', 'DB2U_LOGS_STORAGE_CLASS') }}"
db2u_logs_storage_size_gb: "{{ lookup('env', 'DB2U_LOGS_STORAGE_SIZE_GB') | default(100, true) }}"

# Configure temp storage for db2u
db2u_temp_storage_class: "{{ lookup('env', 'DB2U_TEMP_STORAGE_CLASS') }}"
db2u_temp_storage_size_gb: "{{ lookup('env', 'DB2U_TEMP_STORAGE_SIZE_GB') | default(100, true) }}"

# MAS JdbcCfg generation settings
# -----------------------------------------------------------------------------------------------------------------
mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

mas_config_scope: "{{ lookup('env', 'MAS_CONFIG_SCOPE') | default('system', true) }}" # Supported values are "system", "ws", "app", or "wsapp"
mas_workspace_id: "{{ lookup('env', 'MAS_WORKSPACE_ID') }}" # Necessary for ws and wsapp scopes
mas_application_id: "{{ lookup('env', 'MAS_APP_ID') }}" # Necessary for app and wsapp scopes

# request/limit defaults
# -----------------------------------------------------------------------------------------------------------------
db2u_cpu_requests: "{{ lookup('env', 'DB2U_CPU_REQUESTS')  | default('2000m', true) }}"
db2u_cpu_limits: "{{ lookup('env', 'DB2U_CPU_LIMITS')  | default('4000m', true) }}"
db2u_memory_requests: "{{ lookup('env', 'DB2U_MEMORY_REQUESTS')  | default('6Gi', true) }}"
db2u_memory_limits: "{{ lookup('env', 'DB2U_MEMORY_LIMITS')  | default('12Gi', true) }}"

registry: cp.icr.io
registry_user: cp
entitlement_key: "{{ lookup('env', 'ENTITLEMENT_KEY') }}"
