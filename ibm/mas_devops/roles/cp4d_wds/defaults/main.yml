# CP4D Admin User Crdential used to call CP4D API to provision Discovery Instance
# If not specified, the script will use the admin initial password during CP4D install.
cp4d_username: "{{ lookup('env', 'CP4D_USERNAME') }}"
cp4d_password: "{{ lookup('env', 'CP4D_PASSWORD') }}"


# Configure Discovery Channel and Version info
# If not specified, for wdschannel it's v4.0 by default , and for wdsversion it's 4.0.4 by default
wdschannel: "{{ lookup('env', 'WDS_CHANNEL') | default('v4.0', True) }}"
wdsversion: "{{ lookup('env', 'WDS_VERSION') | default('4.0.6', True)}}"

# Storage Class during discovery install
# If it's missing, we will query the existing CP4D Storage Class and use it for Discovery install
wdsstorageclass: "{{ lookup('env', 'WDS_STORAGE_CLASS') }}"

# When these variables are defined we will create the ObjectStorageCfg resource,
# if either is missing then the configuration will not be generated
# ---------------------------------------------------------------------------------------------------------------------
mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"
mas_workspace_id: "{{ lookup('env', 'MAS_WORKSPACE_ID') }}"

# When these variables are defined, that means you have external discovery instance
# otherwise we will install and setup discovery on the existing CP4D in the cluster
# ---------------------------------------------------------------------------------------------------------------------
assist_wds_url: "{{ lookup('env', 'ASSIST_WDS_URL') }}"
assist_wds_admin: "{{ lookup('env', 'ASSIST_WDS_ADMIN') }}"
assist_wds_pass: "{{ lookup('env', 'ASSIST_WDS_PASS') }}"
