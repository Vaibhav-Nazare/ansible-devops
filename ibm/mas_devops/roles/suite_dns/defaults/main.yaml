# The GroupName here is used to identify your company or business unit that
# created this webhook.
# For example, this may be "acme.mycompany.com".
# This name will need to be referenced in each Issuer's `webhook` stanza to
# inform cert-manager of where to send ChallengePayload resources in order to
# solve the DNS01 challenge.
# This group name should be **unique**, hence using your own company's domain
# here is recommended.
groupName: acme.msmaximoappsuite.br

logLevel: 1

certManager:
  namespace: cert-manager
  serviceAccountName: cert-manager

image:
  repository: quay.io/ibmmas/cert-manager-webhook-ibm-cis
  tag: 1.0.0
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 443

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# you can obtain CRN from overview page of your CIS service in IBM Cloud
cis_crn: "{{ lookup('env', 'CIS_CRN') }}"
# Domain prefix is whatever you want to append to your DNS entry to make it unique
cis_subdomain: "{{ lookup('env', 'CIS_SUBDOMAIN') }}"
# generate your apikey in IBM Cloud
# ibmcloud_apikey: "{{ lookup('env', 'IBMCLOUD_APIKEY') }}"
# generate a Service ID apikey in IBM Cloud for strict access to the 'Internet Services` service with
# an 'Access Policy' of Editor/Manager
cis_apikey: "{{ lookup('env', 'CIS_APIKEY') | default(lookup('env', 'IBMCLOUD_APIKEY'), true) }}"

# Email used register letsencrypt certificates and receive cert notifications
cis_email: "{{ lookup('env', 'CIS_EMAIL') }}"
# Skip DNS entries creation
cis_skip_dns_entries: "{{ lookup('env', 'CIS_SKIP_DNS_ENTRIES') | default(false, true) }}"
# Skip CIS cluster issuer creation, in case you just want to create the DNS entries
cis_skip_cluster_issuer: "{{ lookup('env', 'CIS_SKIP_CLUSTER_ISSUER') | default(false, true) }}"
# Do you want to update a DNS entry if it already exists?
update_dns: "{{ lookup('env', 'UPDATE_DNS_ENTRIES') | default(true, true) }}"
# e.g: "apps.joaopauloksn.cp.fyre.ibm.com" Default will be always from cluster ingress CR.
custom_ocp_ingress: "{{ lookup('env', 'OCP_INGRESS') | default(None, true)}}"

# MAS Cluster Issuer
# -----------------------------------------------------------------------------
# If cis, custom_cluster_issuer = cis-letsencrypt-production-{{ mas_instance_id }}
# If PKI, custom_cluster_issuer = MAS_CUSTOM_CLUSTER_ISSUER
# If not specified, custom_cluster_issuer = autogenerated
default_custom_cluster_issuer: "cis-letsencrypt-production-{{ mas_instance_id }}"
custom_cluster_issuer: "{{ (cis_crn != '') | ternary (lookup('env', 'MAS_CUSTOM_CLUSTER_ISSUER') | default(default_custom_cluster_issuer, true), lookup('env', 'MAS_CUSTOM_CLUSTER_ISSUER') | default(None, true)) }}"

# MAS Domain
# -----------------------------------------------------------------------------
custom_domain: "{{ lookup('env', 'MAS_DOMAIN') | default(None)}}"

# CP4D Intergration
# -----------------------------------------------------------------------------
cpd_services_namespace: "{{ lookup('env', 'CPD_SERVICES_NAMESPACE') | default('cpd-services', true) }}"
# Note: the suite version of the cp4d web client route is only configured if you use a custom domain regardless
# as to the below setting
configure_suite_cp4d_route: "{{ lookup('env', 'CONFIGURE_SUITE_CP4D_ROUTE') | default('True', true) | bool }}"
