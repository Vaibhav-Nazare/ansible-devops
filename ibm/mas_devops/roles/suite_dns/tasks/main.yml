---
# 1. Check if cert-manager is installed and which to use
# -----------------------------------------------------------------------------
- name: Check if cert-manager is installed
  kubernetes.core.k8s_info:
    api_version: v1
    name: cert-manager
    namespace: "cert-manager"
    kind: Deployment
  register: _cert_manager_deployed

# if cert-manager from cert-manager namespace is deployed, then it will be used per default otherwise set ibm-cert-manager from ibm-common-services to be used
# if it is a MAS 8.6.x -> 8.7.x upgrade being executed, then we need to install CIS into ibm-common-services namespace too
- name: Define which cert-manager to use
  when: ((_cert_manager_deployed.resources is defined and _cert_manager_deployed.resources | length == 0) or (is_suite_upgrade is defined and is_suite_upgrade == true))
  set_fact:
    certManager:
      namespace: ibm-common-services
      serviceAccountName: ibm-cert-manager-controller

- debug:
    msg:
      - "Cert-manager namespace: {{ certManager.namespace }}"
      - "Cert-manager service account: {{ certManager.serviceAccountName }}"

# 2. Use CIS to set DNS and the custom cluster provider
# -----------------------------------------------------------------------------
- include_tasks: tasks/providers/cis/main.yml
  when:
    - custom_domain != ""
    - custom_cluster_issuer != ""
    - cis_crn is defined
    - cis_email is defined
    - cis_apikey is defined

# 3. Set custom cp4d route based on the custom cluster issuer
# -----------------------------------------------------------------------------
- include_tasks: tasks/cp4d.yml
  when:
    - configure_suite_cp4d_route
    - custom_domain != ''
    - custom_cluster_issuer != ''
