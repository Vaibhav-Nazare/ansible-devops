---

# 0. Lookup the version and flavour of OCP that we are targeting
# -----------------------------------------------------------------------------
# In Frye OCP 4.6 we find this configmap named as "openshift-install-manifests"
# In ROKS OCP 4.6 and 4.8 we find this configmap named as "openshift-install"

- name: Get OCP Install Information (openshift-install)
  community.kubernetes.k8s_info:
    api_version: v1
    kind: ConfigMap
    name: openshift-install
    namespace: openshift-config
  register: openshift_config

- name: Register OCP install configuration variables (openshift-install)
  when:
    - openshift_config.resources is defined
    - openshift_config.resources | length > 0
  set_fact:
    ocp_install_invoker: "{{ openshift_config.resources[0].data.invoker }}" # Known values: "ROKS"
    ocp_install_version: "{{ openshift_config.resources[0].data.version }}"
    ocp_install_release: "{{ openshift_config.resources[0].data.version | regex_search('[^.]*.[^.]*') }}"

# If we didn't already set the new facts then it means we couldn't find the "openshift-install" configmap
- name: Get OCP Install Information (openshift-install-manifests)
  when: ocp_install_invoker is not defined
  community.kubernetes.k8s_info:
    api_version: v1
    kind: ConfigMap
    name: openshift-install-manifests
    namespace: openshift-config
  register: openshift_config

- name: Register OCP install configuration variables (openshift-install-manifests)
  when:
    - ocp_install_invoker is not defined
    - openshift_config.resources is defined
    - openshift_config.resources | length > 0
  set_fact:
    ocp_install_invoker: "{{ openshift_config.resources[0].data.invoker }}" # Known values: "user" (in Fyre)
    ocp_install_version: "{{ openshift_config.resources[0].data.version }}"
    ocp_install_release: "{{ openshift_config.resources[0].data.version | regex_search('[^.]*.[^.]*') }}"

# If we didn't already set the new facts then it means we couldn't find either of the expected configmaps
- name: Fail if we couldn't find the openshift-install or openshift-install-manifests configmaps
  when: ocp_install_invoker is not defined
  fail:
    msg: "We couldn't find either the openshift-install or openshift-install-manifests configmaps in the openshift-config namespace"

- name: Debug OCP install configuration variables
  debug:
    msg:
      - "OCP Install Invoker ................ {{ ocp_install_invoker }}"
      - "OCP Install Version ................ {{ ocp_install_version }}"
      - "OCP Install Release ................ {{ ocp_install_release }}"

# 1. Install IBM catalogs
# -----------------------------------------------------------------------------
- name: "Create IBM catalogs"
  community.kubernetes.k8s:
    definition: "{{ lookup('template', 'templates/ibm-catalogs.yml') }}"

# 2. Install development (pre-release) catalogs
# -----------------------------------------------------------------------------
- name: "Install development (pre-release) catalogs"
  when:
    - artifactory_username is defined
    - artifactory_username != ""
    - artifactory_apikey is defined
    - artifactory_apikey != ""
    - not airgap_install
  include_tasks: "tasks/development-catalogs.yml"

# 3. Install cert-manager
# -----------------------------------------------------------------------------
- name: Check if Cert Manager is already installed
  community.kubernetes.k8s_info:
    api_version: v1
    name: cert-manager
    namespace: "cert-manager"
    kind: Deployment
  register: _cert_manager_deployed

# Install foundation services cert-manager if MAS 8.7+, otherwise, install jetstack/standalone version
- name: Define which Cert Manager to install
  set_fact:
    cm_version: "{{ 'foundation-services' if (mas_channel not in mas_channels_old_releases) else 'standalone' }}"
  when:
    - (_cert_manager_deployed.resources | length) == 0
    - not airgap_install

- include_tasks: "tasks/certmanager/{{ cm_version }}.yml"
  when:
    - cm_version is defined and cm_version !=''
    - (_cert_manager_deployed.resources | length) == 0
    - not airgap_install

# 4. Install Service Binding Operator
# -----------------------------------------------------------------------------
# Install stable channel with automatic updates if MAS 8.7+, otherwise, install preview channel locked to v0.8

- name: Define which SBO to install
  when:
    - not airgap_install
  set_fact:
    sbo_channel: "{{ 'stable' if (mas_channel not in mas_channels_old_releases and ocp_install_release != '4.6') else 'preview' }}"

- include_tasks: "tasks/sbo/{{ sbo_channel }}.yml"
  when:
    - not airgap_install

# 5. Update openshift monitoring to define a specific storage class for Prometheus logs
# -------------------------------------------------------------------------------------
# All other settings have defaults, but the user must set prometheus_storage_class and
# prometheus_alertmgr_storage_class for us to be able to apply this configuration
- name: Set storage class and retention period for Prometheus logs
  when:
    - prometheus_storage_class is defined
    - prometheus_storage_class != ""
    - prometheus_alertmgr_storage_class is defined
    - prometheus_alertmgr_storage_class != ""
  community.kubernetes.k8s:
    definition: "{{ lookup('template', 'templates/cluster-monitoring/configmap.yml') }}"
    wait: yes
    wait_timeout: 120

# 6. Increase cluster image registry from defautl 100Gi to 400Gi (cp4d images consume lot of space)
# -------------------------------------------------------------------------------------
- name: "Increase cluster image registry"
  when: ocp_install_invoker == "ROKS"
  command: bash "{{ role_path }}"/files/configImgRegStorage.sh
  register: result

- name: Debug Image Registry Volume order request
  debug: msg="{{ result }}"
