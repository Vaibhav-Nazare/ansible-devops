---
# Wait until all applications workspaces
- name: 'Wait until all apps workspace operators are reconciled after upgrade'
  block:
    - name: "wait : Set the retry count"
      set_fact:
        app_retry_count: "{{ 0 if app_retry_count is undefined else app_retry_count|int + 1 }}"
        apps_count: 0
        ready_apps_count: 0

    - name: "wait : Lookup app ws CRs"
      vars:
        app_name: "{{ item }}"
      kubernetes.core.k8s_info:
        api_version: "{{ hostvars[inventory_hostname][item].apiVersion }}"
        kind: "{{ hostvars[inventory_hostname][item].wskind }}"
        label_selectors:
          - mas.ibm.com/instanceId={{ mas_instance_id }}
          - mas.ibm.com/applicationId={{ item }}
      register: app_cr_lookup
      until:
        - app_cr_lookup.resources is defined
        - app_cr_lookup.resources | length > 0
      with_items: "{{ mas_apps }}"

    # Most Apps Workspace CRs are ready when 'type': 'Ready' and 'reason': 'Ready', but Predict's Workspace 'reason': 'WorkspaceReady'
    - name: "wait : Check if apps workspace operators have been upgraded"
      set_fact:
        apps_count: "{{ apps_count|int + 1 }}"
        ready_apps_count: "{{ ready_apps_count|int + 1 if (
          item.resources is defined
          and item.resources | json_query('[*].status.conditions[?type==`Running`][].reason') | select ('match','Successful') | list | length == 1
          and item.resources | json_query('[*].status.conditions[?type==`Failure`][].status') | select ('match','False') | list | length == 1
          and (item.resources | json_query('[*].status.conditions[?type==`Ready`][].reason') | select ('match','Ready') | list | length == 1 or item.resources | json_query('[*].status.conditions[?type==`Ready`][].reason') | select ('match','WorkspaceReady') | list | length == 1))
          else ready_apps_count|int}}"
      with_items: "{{ app_cr_lookup.results }}"
      loop_control:
        label:
          - "{{ item.resources[0].kind }} CR status = {{ 'Workspace operator upgraded!' if (
            item.resources is defined
            and item.resources | json_query('[*].status.conditions[?type==`Running`][].reason') | select ('match','Successful') | list | length == 1
            and item.resources | json_query('[*].status.conditions[?type==`Failure`][].status') | select ('match','False') | list | length == 1
            and (item.resources | json_query('[*].status.conditions[?type==`Ready`][].reason') | select ('match','Ready') | list | length == 1 or item.resources | json_query('[*].status.conditions[?type==`Ready`][].reason') | select ('match','WorkspaceReady') | list | length == 1))
            else 'Workspace upgrade pending...' }}"
          - "{{ (item.resources | json_query('[*].status.conditions[?type==`Ready`][].reason')) }} - {{ (item.resources | json_query('[*].status.conditions[?type==`Ready`][].message')) }}"
          - "{{ 'Error! Something wrong while upgrading this app workspace, check its CR for more details...' if (item.resources | json_query('[*].status.conditions[?type==`Failure`][].reason') | select ('match','Failed') | list | length == 1) }}"

    - name: "wait : Fail if one or more apps workspace operators are pending to upgrade..."
      assert:
        that: ready_apps_count == apps_count
        fail_msg: "[{{ app_retry_count }}/50] {{ ready_apps_count }} of {{ apps_count }} apps workspace operators are reconciled"

    # reset retry count when all apps are upgraded
    - set_fact:
        retry_apps_count: 0
      when: ready_apps_count == apps_count
  rescue:
    - name: "wait : Give up after 50 attempts (approx 5 hours)"
      assert:
        that: app_retry_count | int < 50
        fail_msg: Timed out waiting for app operator to be ready

    - name: "wait : Wait for 5 minutes before checking again"
      pause:
        minutes: 5

    - include_tasks: "{{ role_path }}/tasks/wait/wait_for_app_ws_upgrade.yml"
