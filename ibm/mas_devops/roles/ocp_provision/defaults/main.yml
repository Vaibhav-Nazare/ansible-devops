---
# Cluster definition
# -----------------------------------------------------------------------------
cluster_name: "{{ lookup('env', 'CLUSTER_NAME')}}"
cluster_type: "{{ lookup('env', 'CLUSTER_TYPE')}}"
cluster_platform: "{{lookup('env', 'CLUSTER_PLATFORM') | default('x',true)}}"

ocp_version: "{{ lookup('env', 'OCP_VERSION') }}"

supported_cluster_types:
  - fyre
  - roks
  - rosa
  - ipi
  - powervs

# GPU support (limited)
# -----------------------------------------------------------------------------
# Flag to add GPU worker node to cluster. Currently only set up for ROKS clusters
ocp_provision_gpu: "{{ lookup('env', 'OCP_PROVISION_GPU') | default('false', True) }}"

# The number of GPU worker nodes to deploy. Currently only set up for ROKS clusters
gpu_workers: "{{ lookup('env', 'GPU_WORKERS') | default('1', true) }}"

# The name of the gpu worker pool.
gpu_workerpool_name: "{{ lookup('env', 'GPU_WORKERPOOL_NAME') | default('gpu', true) }}"


# ROKS
# -----------------------------------------------------------------------------
ibmcloud_apikey: "{{ lookup('env', 'IBMCLOUD_APIKEY') }}"
ibmcloud_resourcegroup: "{{ lookup('env', 'IBMCLOUD_RESOURCEGROUP') | default('Default', true) }}"

roks_zone: "{{ lookup('env', 'ROKS_ZONE') | default('dal10', true) }}"
roks_flavor: "{{ lookup('env', 'ROKS_FLAVOR') | default('b3c.16x64.300gb', true) }}"
roks_workers: "{{ lookup('env', 'ROKS_WORKERS') | default('3', true) }}"
roks_flags: "{{ lookup('env', 'ROKS_FLAGS') | default('', true) }}"


# FYRE
# -----------------------------------------------------------------------------
fyre_username: "{{ lookup('env', 'FYRE_USERNAME') }}"
fyre_password: "{{ lookup('env', 'FYRE_APIKEY') }}"

fyre_cluster_description: "{{ lookup('env', 'FYRE_CLUSTER_DESCRIPTION') | default('No description provided', true) }}"
fyre_cluster_size: "{{ lookup('env', 'FYRE_CLUSTER_SIZE') | default('large', true) }}"
fyre_product_id: "{{ lookup('env', 'FYRE_PRODUCT_ID') }}"
fyre_quota_type: "{{ lookup('env', 'FYRE_QUOTA_TYPE') | default('quick_burn', true) }}"

# Only used when quota_type == product_group
fyre_worker_count: "{{ lookup('env', 'FYRE_WORKER_COUNT') | default('3', true) }}"
fyre_worker_memory: "{{ lookup('env', 'FYRE_WORKER_MEMORY') | default('16', true) }}"
fyre_worker_cpu: "{{ lookup('env', 'FYRE_WORKER_CPU') | default('64', true) }}"


# ROSA
# -----------------------------------------------------------------------------
rosa_token: "{{ lookup('env', 'ROSA_TOKEN') }}"
rosa_cluster_admin_password: "{{ lookup('env', 'ROSA_CLUSTER_ADMIN_PASSWORD') }}"
rosa_compute_nodes: "{{ lookup('env', 'ROSA_COMPUTE_NODES') | default('3', true) }}"


# AWS
# -----------------------------------------------------------------------------
aws_access_key_id: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
aws_secret_access_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"


# Installer Provided Infrastructure
# -----------------------------------------------------------------------------
ipi_base_domain: "{{ lookup('env', 'IPI_BASE_DOMAIN') }}"
ipi_platform: "{{ lookup('env', 'IPI_PLATFORM')  | default('aws', true)  }}"
ipi_region: "{{ lookup('env', 'IPI_REGION')  | default('us-east-1', true)  }}"

# For now we can default the type to the best fit for AWS as that's all we support atm
ipi_compute_type: "{{ lookup('env', 'IPI_COMPUTE_TYPE') | default('m5.4xlarge', true) }}"
ipi_compute_replicas: "{{ lookup('env', 'IPI_COMPUTE_REPLICAS') | default('3', true) }}"

# For now we can default the type to the best fit for AWS as that's all we support atm
ipi_controlplane_type: "{{ lookup('env', 'IPI_CONTROLPLANE_TYPE') | default('m5.4xlarge', true) }}"
ipi_controlplane_replicas: "{{ lookup('env', 'IPI_CONTROLPLANE_REPLICAS') | default('3', true) }}"

ipi_pull_secret_file: "{{ lookup('env', 'IPI_PULL_SECRET_FILE') }}"

ipi_dir: "{{ lookup('env', 'IPI_DIR') | default(ansible_env.HOME ~ '/openshift-install', True) }}"
ipi_config_dir: "{{ ipi_dir }}/config/{{ cluster_name }}"

ocp_installer_dir: "{{ ipi_dir }}/installer/{{ ocp_version }}"
ocp_installer_exe: "{{ ipi_dir }}/installer/{{ ocp_version }}/openshift-install"


## IBM Cloud ppc64le 
release_ver: "{{ lookup('env', 'RELEASE_VER') | default('4.10', true) }}"
#terraform_action: "{{ lookup('env', 'ACTION' | default('create', true) }}"
# Variables to pass the script openshift-install-powervs
var_file: "{{ lookup('template', 'powervs/variables.tfvars.j2') }}"
flavor: "{{ lookup('env', 'FLAVOR' | default('', true) }}"
#force_destroy: "{{ lookup('env', 'FOREC_DESTROY' | default('0', true) }}"
ignore_os_checks: "{{ lookup('env', 'IGNORE_OS' | default('0', true) }}"
verbose: "{{ lookup('venvars', 'TF_TRACE' | default('0', true) }}"
#all_images: "{{ lookup('env', 'DISPLAY_ALL_IMAGES' | default('0', true) }}"
trace: "{{ lookup('env', 'TRACE' | default('0', true) }}"
version: "{{ lookup('env', 'VERSION' | default('v1.5.0', true) }}"


ibmcloud_region: "{{ lookup('env', 'IBMCLOUD_REGION') }}"
ibmcloud_zone: "{{ lookup('env', 'IBMCLOUD_ZONE') }}"
service_instance_id: "{{ lookup('env', 'SERVICE_INSTANCE_ID') }}"
rhel_image_name: "{{ lookup('env', 'RHEL_IMAGES') }}"
rhcos_image_name: "{{ lookup('env', 'RHCOS_IMAGES') }}"
system_type: "s922"
network_name: "{{ lookup('env', 'network_name') }}"
openshift_install_tarball: "{{ lookup('env', 'OPENSHIFT_INSTALL_TARBALL') }}"
openshift_client_tarball: "{{ lookup('env', 'OPENSHIFT_CLIENT_TARBALL') }}"
cluster_id_prefix: "ocp-410-1"
cluster_id: "ocp1"
cluster_domain: "ibm.com"
bastion_memory: "16" 
bastion_processors: "1"
bastion_count: "1"
bootstrap_memory: "32"
bootstrap_processors: "0.5"
bootstrap_count: "1"
master_memory: "32"
master_processors: "1"
master_count: "3"
worker_memory: "64"
worker_processors: "1"
worker_count: "3"
volume_size: "300"
storage_type: "none"
rhel_subscription_username: "{{ lookup('env', 'RHEL_SUBS_USER') }}"
rhel_subscription_password: "{{ lookup('env', 'RHEL_SUBS_PASSWORD') }}"
pull_secret_file: "{{ lookup('env', 'PULL_SECRET_FILE') }}"